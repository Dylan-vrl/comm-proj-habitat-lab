# @package _global_

defaults:
  - /habitat_baselines: habitat_baselines_rl_config_base
  - /benchmark/nav/targetnav: targetnav_comm_proj
  - _self_


habitat:
  environment:
    max_episode_steps: 256
  task:
    measurements:
      top_down_map:
        max_episode_steps: 256
    slack_reward: -0.003


habitat_baselines:
  verbose: False
  trainer_name: "ppo"
  torch_gpu_id: 0
  tensorboard_dir: "tb"
  video_dir: "video_dir"
  # Evaluate on all episodes
  test_episode_count: -1
  eval_ckpt_path_dir: "data/new_checkpoints"
  num_environments: 10
  checkpoint_folder: "data/new_checkpoints"
  num_updates: 5000
  total_num_steps: -1
  log_interval: 25
  video_interval: 150
  num_checkpoints: 20
  # Force PyTorch to be single threaded as
  # this improves performance considerably
  force_torch_single_threaded: True
  launch_eval_afterwards: True

  eval:
    video_option: [ ]

  rl:
    ppo:
      # ppo params
      clip_param: 0.2
      ppo_epoch: 4
      num_mini_batch: 2
      value_loss_coef: 0.5
      entropy_coef: 0.01
      lr: 2.5e-4
      eps: 1e-5
      max_grad_norm: 0.5
      num_steps: 128
      hidden_size: 512
      use_gae: True
      gamma: 0.99
      tau: 0.95
      use_linear_clip_decay: True
      use_linear_lr_decay: True
      reward_window_size: 50

      # Use double buffered sampling, typically helps
      # when environment time is similar or larger than
      # policy inference time during rollout generation
      use_double_buffered_sampler: False
